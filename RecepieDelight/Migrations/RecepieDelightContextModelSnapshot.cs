// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecepieDelight.Data;

#nullable disable

namespace RecepieDelight.Migrations
{
    [DbContext(typeof(RecepieDelightContext))]
    partial class RecepieDelightContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IngredientRecepie", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("int");

                    b.Property<int>("RecepiesId")
                        .HasColumnType("int");

                    b.HasKey("IngredientsId", "RecepiesId");

                    b.HasIndex("RecepiesId");

                    b.ToTable("IngredientRecepie");
                });

            modelBuilder.Entity("RecepieDelight.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Desserts"
                        });
                });

            modelBuilder.Entity("RecepieDelight.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Filter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RecepieDelight.Models.Recepie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("complexity")
                        .HasColumnType("int");

                    b.Property<string>("createdDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("preparationTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recepie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "agahweahah",
                            Title = "Classic Avocado Toast",
                            complexity = 1,
                            createdDate = "2022-10-17",
                            preparationTime = "12:30 min"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "agahweahah",
                            Title = "Eggs",
                            complexity = 1,
                            createdDate = "2022-10-17",
                            preparationTime = "12:30 min"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "qew",
                            Title = "bacon",
                            complexity = 1,
                            createdDate = "2023-2-17",
                            preparationTime = "2:30 min"
                        });
                });

            modelBuilder.Entity("RecepieDelight.Models.Shopping_List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("shopping_Lists");
                });

            modelBuilder.Entity("RecepieShopping_List", b =>
                {
                    b.Property<int>("RecepiesId")
                        .HasColumnType("int");

                    b.Property<int>("Shopping_ListsId")
                        .HasColumnType("int");

                    b.HasKey("RecepiesId", "Shopping_ListsId");

                    b.HasIndex("Shopping_ListsId");

                    b.ToTable("RecepieShopping_List");
                });

            modelBuilder.Entity("IngredientRecepie", b =>
                {
                    b.HasOne("RecepieDelight.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecepieDelight.Models.Recepie", null)
                        .WithMany()
                        .HasForeignKey("RecepiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecepieDelight.Models.Recepie", b =>
                {
                    b.HasOne("RecepieDelight.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RecepieShopping_List", b =>
                {
                    b.HasOne("RecepieDelight.Models.Recepie", null)
                        .WithMany()
                        .HasForeignKey("RecepiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecepieDelight.Models.Shopping_List", null)
                        .WithMany()
                        .HasForeignKey("Shopping_ListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
